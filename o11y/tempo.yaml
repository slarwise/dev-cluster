apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
spec:
  selector:
    matchLabels:
      app: tempo
  replicas: 1
  template:
    metadata:
      labels:
        app: tempo
    spec:
      containers:
        - name: tempo
          image: grafana/tempo
          args:
            - -config.file=/mnt/config/tempo.yaml
          ports:
            - name: otlp-http
              containerPort: 4318
            - name: http
              containerPort: 3200
          volumeMounts:
            - name: tempo-config
              mountPath: /mnt/config
      volumes:
        - name: tempo-config
          configMap:
            name: tempo-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-config
data:
  tempo.yaml: |
    server:
      http_listen_port: 3200

    query_frontend:
      search:
        duration_slo: 5s
        throughput_bytes_slo: 1.073741824e+09
      trace_by_id:
        duration_slo: 5s

    distributor:
      receivers:                           # this configuration will listen on all ports and protocols that tempo is capable of.
        otlp:
          protocols:
            http:

    ingester:
      max_block_duration: 5m               # cut the headblock when this much time passes. this is being set for demo purposes and should probably be left alone normally

    compactor:
      compaction:
        block_retention: 1h                # overall Tempo trace retention. set for demo purposes

    metrics_generator:
      registry:
        external_labels:
          source: tempo
          cluster: docker-compose
      storage:
        path: /tmp/tempo/generator/wal
        remote_write:
          - url: http://prometheus:9090/api/v1/write
            send_exemplars: true

    storage:
      trace:
        backend: local                     # backend configuration to use
        wal:
          path: /tmp/tempo/wal             # where to store the the wal locally
        local:
          path: /tmp/tempo/blocks

    overrides:
      defaults:
        metrics_generator:
          processors: [service-graphs, span-metrics] # enables metrics generator
---
apiVersion: v1
kind: Service
metadata:
  name: tempo
spec:
  selector:
    app: tempo
  ports:
    - protocol: TCP
      port: 4318
      targetPort: otlp-http
      name: send-traces-here
    - protocol: TCP
      port: 3200
      targetPort: http
      name: read-traces-here
